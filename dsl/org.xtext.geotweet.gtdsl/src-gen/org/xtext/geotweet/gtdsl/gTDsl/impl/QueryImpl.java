/**
 * generated by Xtext 2.10.0
 */
package org.xtext.geotweet.gtdsl.gTDsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.geotweet.gtdsl.gTDsl.CountryList;
import org.xtext.geotweet.gtdsl.gTDsl.GTDslPackage;
import org.xtext.geotweet.gtdsl.gTDsl.HashtagList;
import org.xtext.geotweet.gtdsl.gTDsl.Query;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Query</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.geotweet.gtdsl.gTDsl.impl.QueryImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.geotweet.gtdsl.gTDsl.impl.QueryImpl#getHashtags <em>Hashtags</em>}</li>
 *   <li>{@link org.xtext.geotweet.gtdsl.gTDsl.impl.QueryImpl#getCountries <em>Countries</em>}</li>
 * </ul>
 *
 * @generated
 */
public class QueryImpl extends MinimalEObjectImpl.Container implements Query
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getHashtags() <em>Hashtags</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHashtags()
   * @generated
   * @ordered
   */
  protected HashtagList hashtags;

  /**
   * The cached value of the '{@link #getCountries() <em>Countries</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCountries()
   * @generated
   * @ordered
   */
  protected CountryList countries;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected QueryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GTDslPackage.Literals.QUERY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GTDslPackage.QUERY__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public HashtagList getHashtags()
  {
    if (hashtags != null && hashtags.eIsProxy())
    {
      InternalEObject oldHashtags = (InternalEObject)hashtags;
      hashtags = (HashtagList)eResolveProxy(oldHashtags);
      if (hashtags != oldHashtags)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GTDslPackage.QUERY__HASHTAGS, oldHashtags, hashtags));
      }
    }
    return hashtags;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public HashtagList basicGetHashtags()
  {
    return hashtags;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHashtags(HashtagList newHashtags)
  {
    HashtagList oldHashtags = hashtags;
    hashtags = newHashtags;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GTDslPackage.QUERY__HASHTAGS, oldHashtags, hashtags));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CountryList getCountries()
  {
    if (countries != null && countries.eIsProxy())
    {
      InternalEObject oldCountries = (InternalEObject)countries;
      countries = (CountryList)eResolveProxy(oldCountries);
      if (countries != oldCountries)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GTDslPackage.QUERY__COUNTRIES, oldCountries, countries));
      }
    }
    return countries;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CountryList basicGetCountries()
  {
    return countries;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCountries(CountryList newCountries)
  {
    CountryList oldCountries = countries;
    countries = newCountries;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GTDslPackage.QUERY__COUNTRIES, oldCountries, countries));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GTDslPackage.QUERY__NAME:
        return getName();
      case GTDslPackage.QUERY__HASHTAGS:
        if (resolve) return getHashtags();
        return basicGetHashtags();
      case GTDslPackage.QUERY__COUNTRIES:
        if (resolve) return getCountries();
        return basicGetCountries();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GTDslPackage.QUERY__NAME:
        setName((String)newValue);
        return;
      case GTDslPackage.QUERY__HASHTAGS:
        setHashtags((HashtagList)newValue);
        return;
      case GTDslPackage.QUERY__COUNTRIES:
        setCountries((CountryList)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GTDslPackage.QUERY__NAME:
        setName(NAME_EDEFAULT);
        return;
      case GTDslPackage.QUERY__HASHTAGS:
        setHashtags((HashtagList)null);
        return;
      case GTDslPackage.QUERY__COUNTRIES:
        setCountries((CountryList)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GTDslPackage.QUERY__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case GTDslPackage.QUERY__HASHTAGS:
        return hashtags != null;
      case GTDslPackage.QUERY__COUNTRIES:
        return countries != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //QueryImpl
