/*
 * generated by Xtext 2.10.0
 */
package org.xtext.geotweet.gtdsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.eclipse.xtext.naming.IQualifiedNameProvider
 
import com.google.inject.Inject
import org.xtext.geotweet.gtdsl.gTDsl.Query

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class GTDslGenerator extends AbstractGenerator {

    @Inject extension IQualifiedNameProvider
    
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
        for (e : resource.allContents.toIterable.filter(Query)) {
            fsa.generateFile(
                "config.py",
                e.compile
            )
        }
	}
	
	def String compile(Query query){
		var String hashTagList = "hashtags = "+query.hashtags.hashtag.map[tag | "{'name': '" + tag.name + "', 'color': '" + tag.color + "'}"];
		var String countryList = "country_list = "+ query.countries.country.map[ctr | "'" + ctr.name + "'"];
		return hashTagList + "\n" + countryList
	}
}
